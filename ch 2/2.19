> (define (cc amount coin-values)
    (cond ((= amount 0) 1)
          ((or (< amount 0) (no-more? coin-values)) 0)
          (else
           (+ (cc amount (except-first-denomination coin-values)) 
              (cc (- amount (first-denomination coin-values)) coin-values)))))
> (define (except-first-denomination coin-values)
    (cdr coin-values))
> (define (first-denomination coin-values)
    (car coin-values))
> (define us-coins (list 50 25 10 5 1))
> (define uk-coins (list 100 50 20 10 5 2 1 0.5))
> (define (no-more? coin-values)
    (null? coin-values))
> (cc 100 us-coins)
292


> (cc 100 (list 25 50 10 5 1))
292
> (cc 100 (list 25 10 5 1 50))
292
> (cc 100 (list 10 5 1 50 25))
292

The order of list coin-values does not affect the answer of `cc` procedure, becourse the procedure finds all the possible answers of the problem.
But the difference is the efficiency.
